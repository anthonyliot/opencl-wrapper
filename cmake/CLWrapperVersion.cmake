INCLUDE_GUARD(GLOBAL)

FIND_PACKAGE(Git REQUIRED QUIET)

EXECUTE_PROCESS(
    COMMAND git rev-parse HEAD
    OUTPUT_VARIABLE CLWRAPPER_GIT_SHA_LONG
    WORKING_DIRECTORY ${CLWRAPPER_ROOT}
    OUTPUT_STRIP_TRAILING_WHITESPACE)

STRING(SUBSTRING ${CLWRAPPER_GIT_SHA_LONG} 0 8 CLWRAPPER_GIT_SHA)

EXECUTE_PROCESS(
    COMMAND git rev-parse --abbrev-ref HEAD
    OUTPUT_VARIABLE CLWRAPPER_BRANCH_NAME
    WORKING_DIRECTORY ${CLWRAPPER_ROOT}
    OUTPUT_STRIP_TRAILING_WHITESPACE)

EXECUTE_PROCESS(
    COMMAND git rev-list --count HEAD
    OUTPUT_VARIABLE CLWRAPPER_INCR
    WORKING_DIRECTORY ${CLWRAPPER_ROOT}
    OUTPUT_STRIP_TRAILING_WHITESPACE)

CLWRAPPER_NUMBER_TO_HEX(NUMBER ${CLWRAPPER_INCR} OUTPUT_VARIABLE CLWRAPPER_HEX)
SET(CLWRAPPER_HEX "0x${CLWRAPPER_HEX}")
STRING(TIMESTAMP CLWRAPPER_TIME "%Y%m%d")

MESSAGE(STATUS "CLWrapper Version:")
CLWRAPPER_DICT(SET CLWRAPPER_VERSION sha ${CLWRAPPER_GIT_SHA_LONG})
CLWRAPPER_DICT(SET CLWRAPPER_VERSION sha8 ${CLWRAPPER_GIT_SHA})
CLWRAPPER_DICT(SET CLWRAPPER_VERSION branch ${CLWRAPPER_BRANCH_NAME})
CLWRAPPER_DICT(SET CLWRAPPER_VERSION incr ${CLWRAPPER_INCR})
CLWRAPPER_DICT(SET CLWRAPPER_VERSION hex ${CLWRAPPER_HEX})
CLWRAPPER_DICT(SET CLWRAPPER_VERSION time ${CLWRAPPER_TIME})
CLWRAPPER_DICT(SET CLWRAPPER_VERSION version
               ${CLWRAPPER_INCR}.${CLWRAPPER_TIME}.${CLWRAPPER_GIT_SHA})
CLWRAPPER_DICT(PRETTY_PRINT CLWRAPPER_VERSION)

UNSET(CLWRAPPER_GIT_SHA_LONG)
UNSET(CLWRAPPER_GIT_SHA)
UNSET(CLWRAPPER_BRANCH_NAME)
UNSET(CLWRAPPER_INCR)
UNSET(CLWRAPPER_HEX)
UNSET(CLWRAPPER_TIME)
