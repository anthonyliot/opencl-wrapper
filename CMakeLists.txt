CMAKE_MINIMUM_REQUIRED(VERSION 3.8.0 FATAL_ERROR)

INCLUDE(${CMAKE_CURRENT_LIST_DIR}/cmake/CLWrapperFunctions.cmake)
INCLUDE(${CMAKE_CURRENT_LIST_DIR}/cmake/CLWrapperEnvironment.cmake)
INCLUDE(${CMAKE_CURRENT_LIST_DIR}/cmake/CLWrapperVersion.cmake)

PROJECT(clwrapper LANGUAGES CXX)

SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED TRUE)
SET(CMAKE_CXX_EXTENSIONS FALSE)
SET(CMAKE_POSITION_INDEPENDENT_CODE TRUE)

SET(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
SET(CMAKE_SKIP_BUILD_RPATH TRUE)
SET(CMAKE_INSTALL_RPATH "$ORIGIN")

SET(SRCS inc/clwrapper.h inc/clext.h)

FILE(GLOB_RECURSE HDRS inc/*.h)
SET(SRCS src/clwrapper.cpp src/clext.cpp)

ADD_LIBRARY(${PROJECT_NAME} OBJECT ${SRCS} ${HDRS})
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME}
                           PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/inc)
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME}
                           PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/externs/inc)
ADD_LIBRARY(cl::wrapper ALIAS ${PROJECT_NAME})

IF (BUILD_TEST)
    INCLUDE(CTest)
    ADD_EXECUTABLE(${PROJECT_NAME}exec src/main.cpp)
    ADD_DEPENDENCIES(${PROJECT_NAME}exec cl::wrapper)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME}exec PUBLIC cl::wrapper)
    ADD_TEST(NAME ${PROJECT_NAME}exec COMMAND ${PROJECT_NAME}exec)
ENDIF ()
